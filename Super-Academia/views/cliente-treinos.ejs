<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Treinos | Super Academia</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="shortcut icon" href="/images/favicon.ico" type="image/x-icon">
    <style>
        body{
            background-color: #007bff;
            height: 100%;
            margin: 0;
            overflow: hidden;
        }
        .container{
            display: flex;
            gap: 20px;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }
        .exercise_list, .exercise_details{
            background: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            width: 600px;
            height: 600px;
            border: 1px solid #ccc;
            padding: 15px;
            border-radius: 5px;
            overflow-y: auto;
        }
        .exercise_item{
            cursor: pointer;
            padding: 10px;
            border-bottom: 1px solid black;
        }
        .exercise_item:hover{
            background-color: #f0f0f0;
        }
        img{
            max-width: 100%;
            height: auto;
        }
    </style>
</head>
<body>
    <div class="container">
        <div id="exercise_list" class="exercise_list"></div>
        <div class="exercise_details" id="exercise_details">
            <h3>Detalhes do Exercício</h3>
            <p>Clique em um exercício para ver os detalhes.</p>
        </div>
    </div>

    <script>
        const url = new URL(window.location.href);
        const token = url.searchParams.get('token'); // token de autorização
        const id = url.searchParams.get('id'); // id do usuário

        async function lerDB(query) {
            // lê o banco de dados
            const res = await fetch('/ler-db', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ token: token, query: query })
            });
    
            return await res.json();
        }

        // HTML dos planos de treinamento
        const ganho = `<h3>Exercícios para ganho de massa</h3><h5>Treinador <b style="color: rgb(60, 90, 200);">Daniel Aguiar</b></h5><div class="exercise_item" onclick="show_details('Supino Reto', 'Trabalha peitoral maior, tríceps e deltoides.', 'images/supino-reto.webp', 'Peitoral', 'Mantenha a postura correta e controle a descida.')">Supino Reto(Série: 3 | Repetições: 15)</div>
            <div class="exercise_item" onclick="show_details('Agachamento Livre', 'Fortalece pernas e glúteos.', '/images/agachamento-livre.webp', 'Pernas', 'Mantenha a coluna reta e os joelhos alinhados.')">Agachamento Livre (Série: 3 | Repetições: 12)</div>
            <div class="exercise_item" onclick="show_details('Flexão', 'Desenvolve as costas e bíceps.', '/images/flexão.webp', 'Costas, braços e ombros', 'Evite ficar com o corpo torto para melhor ativação muscular.')">Flexão (Série: 3 | Repetições: 12)</div>`;
        const perda = `<h3>Exercícios para perda de massa</h3>
<h5>Treinador <b style="color: rgb(60, 90, 200);">Paulo Vitor</b></h5>
<div class="exercise_item"
    onclick="show_details('Esteira', 'Fortalece pernas, glúteos e o sistema cardiovascular.', '/images/corrida-na-esteira.jpg', 'Pernas', 'Mantenha a postura correta e controle o passo.')">Esteira (Série: 3 | Distância: 500m)</div>
<div class="exercise_item"
    onclick="show_details('Pedalada', 'Fortalece pernas, glúteos e o sistema cardiovascular.', '/images/pedalada.jpg', 'Pernas', 'Mantenha a coluna reta e a máquina ajustada para o seu corpo.')">Pedalada (Série: 3 | Distância: 1km)</div>
<div class="exercise_item"
    onclick="show_details('Simulador de remo', 'Exercício envolvendo quase todos os grupos musculares', '/images/remo.jpg', 'Costas, pernas, braços, ombros, peito', 'Mantenha a coluna em posição adequada e prenda bem os seus pés para não deslizar e levar um tombo!')">Simulador de remo (Série: 3 | Repetições: 30)</div>`;

        // Adiciona os exercícios na tela assim que a página carregar,
        // muda dependendo do plano
        document.addEventListener("DOMContentLoaded", async (e) => {

            // consulta o banco de dados para ver qual é o plano do cliente
            let plano = (await lerDB(`SELECT plano FROM Cliente WHERE id = ${id}`)).plano;

            // plano de ganho de massa = 1; plano de perda = 0
            if (plano == 1) {
                document.getElementById("exercise_list").innerHTML = ganho;
            } else {
                document.getElementById("exercise_list").innerHTML = perda;
            }

        })
        
        // mostra detalhes do exercício selecionado
        function show_details(nome, descricao, imagem, grupo_muscular, observacoes) {
            document.getElementById('exercise_details').innerHTML = `
                <h3>${nome}</h3>
                <p><strong>Descrição:</strong> ${descricao}</p>
                <img src="${imagem}" alt="${nome}">
                <p><strong>Grupo Muscular:</strong> ${grupo_muscular}</p>
                <p><strong>Observações:</strong> ${observacoes}</p>
            `;
        }
    </script>
</body>
</html>